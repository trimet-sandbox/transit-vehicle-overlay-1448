{"version":3,"sources":["../src/index.js"],"names":["coreUtils","ZoomBasedMarkers","PropTypes","React","FeatureGroup","ModeRectangles","ModeCircles","RotatedMarker","CustomTooltip","VehiclePopup","VehicleTooltip","RouteGeometry","VehicleGeometry","utils","TransitVehicleOverlay","props","center","name","selectedVehicle","showOnlyTracked","symbols","vehicleList","visible","zoom","color","highlightColor","onRecenterMap","onVehicleClicked","PopupSlot","TooltipSlot","highlight","lowlight","lowlightColor","pattern","linterIgnoreTheseProps","isValidColor","possibleColor","test","makeVehicleGeometryWrapper","Symbol","VehicleGeometryWrapper","vehicle","entity","renderZoom","routeColor","tripId","propTypes","types","transitVehicleType","isRequired","number","vl","showPattern","findVehicleById","string","bool","arrayOf","zoomBasedSymbolType","defaultProps","minZoom","symbol","Circle","CircledVehicle"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,eAA7B;AAEA,OAAO,KAAKC,cAAZ,MAAgC,qCAAhC;AACA,OAAO,KAAKC,WAAZ,MAA6B,kCAA7B;AACA,OAAO,KAAKC,aAAZ,MAA+B,oCAA/B;AACA,OAAO,KAAKC,aAAZ,MAA+B,mCAA/B;AACA,OAAO,KAAKC,YAAZ,MAA8B,kCAA9B;AACA,OAAO,KAAKC,cAAZ,MAAgC,oCAAhC;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AAEA;AACA;AACA;AACA;AACA;;AACA,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;AACpC,MACEC,MADF,GAuBID,KAvBJ,CACEC,MADF;AAAA,MAEEC,IAFF,GAuBIF,KAvBJ,CAEEE,IAFF;AAAA,MAGEC,eAHF,GAuBIH,KAvBJ,CAGEG,eAHF;AAAA,MAIEC,eAJF,GAuBIJ,KAvBJ,CAIEI,eAJF;AAAA,MAKEC,OALF,GAuBIL,KAvBJ,CAKEK,OALF;AAAA,MAMEC,WANF,GAuBIN,KAvBJ,CAMEM,WANF;AAAA,MAOEC,OAPF,GAuBIP,KAvBJ,CAOEO,OAPF;AAAA,MAQEC,IARF,GAuBIR,KAvBJ,CAQEQ,IARF;AAAA,MAWEC,KAXF,GAuBIT,KAvBJ,CAWES,KAXF;AAAA,MAYEC,cAZF,GAuBIV,KAvBJ,CAYEU,cAZF;AAAA,MAaEC,aAbF,GAuBIX,KAvBJ,CAaEW,aAbF;AAAA,MAcEC,gBAdF,GAuBIZ,KAvBJ,CAcEY,gBAdF;AAAA,MAeEC,SAfF,GAuBIb,KAvBJ,CAeEa,SAfF;AAAA,MAgBEC,WAhBF,GAuBId,KAvBJ,CAgBEc,WAhBF;AAAA,MAmBEC,SAnBF,GAuBIf,KAvBJ,CAmBEe,SAnBF;AAAA,MAoBEC,QApBF,GAuBIhB,KAvBJ,CAoBEgB,QApBF;AAAA,MAqBEC,aArBF,GAuBIjB,KAvBJ,CAqBEiB,aArBF;AAAA,MAsBEC,OAtBF,GAuBIlB,KAvBJ,CAsBEkB,OAtBF;AAwBApB,EAAAA,KAAK,CAACqB,sBAAN,CAA6BjB,IAA7B,EAAmCK,OAAnC,EAA4CN,MAA5C,EAzBoC,CA2BpC;;AACA,MAAMmB,YAAY,GAAG,SAAfA,YAAe,CAAAC,aAAa,EAAI;AACpC,QAAI,OAAOA,aAAP,KAAyB,QAA7B,EAAuC;AACrC,aAAO,KAAP;AACD;;AAED,WAAO,uCAAuCC,IAAvC,CAA4CD,aAA5C,CAAP;AACD,GAND;AAQA;AACF;AACA;AACA;AACA;AACA;;;AACE,MAAME,0BAA0B,GAAG,SAA7BA,0BAA6B,CAAAC,OAAM,EAAI;AAC3C,QAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,OAA2C;AAAA,UAAhCC,OAAgC,QAAxCC,MAAwC;AAAA,UAAjBC,UAAiB,QAAvBpB,IAAuB;AACxE,0BACE,oBAAC,eAAD;AACE,QAAA,KAAK,EAAEY,YAAY,CAACM,OAAO,CAACG,UAAT,CAAZ,GAAmCH,OAAO,CAACG,UAA3C,GAAwDpB,KADjE;AAEE,QAAA,cAAc,EACZW,YAAY,CAACM,OAAO,CAAChB,cAAT,CAAZ,GACIgB,OAAO,CAAChB,cADZ,GAEIA,cALR;AAOE,QAAA,SAAS,EACPP,eAAe,IAAIA,eAAe,CAAC2B,MAAhB,KAA2BJ,OAAO,CAACI,MAR1D;AAUE,QAAA,UAAU,EAAEN,OAVd;AAWE,QAAA,aAAa,EAAEb,aAXjB;AAYE,QAAA,gBAAgB,EAAEC,gBAZpB;AAaE,QAAA,SAAS,EAAEC,SAbb;AAcE,QAAA,WAAW,EAAEC,WAdf;AAeE,QAAA,OAAO,EAAEY,OAfX;AAgBE,QAAA,IAAI,EAAEE;AAhBR,QADF;AAoBD,KArBD;;AAuBAH,IAAAA,sBAAsB,CAACM,SAAvB,GAAmC;AACjCJ,MAAAA,MAAM,EAAE1C,SAAS,CAAC+C,KAAV,CAAgBC,kBAAhB,CAAmCC,UADV;AAEjC1B,MAAAA,IAAI,EAAErB,SAAS,CAACgD,MAAV,CAAiBD;AAFU,KAAnC;AAKA,WAAOT,sBAAP;AACD,GA9BD,CA1CoC,CA0EpC;;;AACA,MAAIW,EAAE,GAAG9B,WAAT;AACA,MAAI+B,WAAW,GAAG,KAAlB;;AACA,MACElC,eAAe,IACfL,KAAK,CAACwC,eAAN,CAAsBhC,WAAtB,EAAmCH,eAAe,CAAC2B,MAAnD,CAFF,EAGE;AACA,QAAI1B,eAAJ,EAAqBgC,EAAE,GAAG,CAACjC,eAAD,CAAL;AACrB,QAAIe,OAAJ,EAAamB,WAAW,GAAG,IAAd;AACd;;AAED,sBACE,oBAAC,YAAD,QACGD,EAAE,IAAI/B,OAAN,iBACC,oBAAC,gBAAD;AACE,IAAA,QAAQ,EAAE+B,EADZ;AAEE,IAAA,OAAO,EAAE/B,OAFX;AAGE,IAAA,eAAe,EAAEkB,0BAHnB;AAIE,IAAA,IAAI,EAAEf;AAJR,IAFJ,EAUG6B,WAAW,iBACV,oBAAC,aAAD;AACE,IAAA,SAAS,EAAEtB,SADb;AAEE,IAAA,cAAc,EAAEL,cAFlB;AAGE,IAAA,QAAQ,EAAEM,QAHZ;AAIE,IAAA,aAAa,EAAEC,aAJjB;AAKE,IAAA,OAAO,EAAEC,OALX;AAME,IAAA,eAAe,EAAEf,eANnB;AAOE,IAAA,IAAI,EAAEK;AAPR,IAXJ,CADF;AAwBD;;AAEDT,qBAAqB,CAACgC,SAAtB,GAAkC;AAChC;AACA7B,EAAAA,IAAI,EAAEf,SAAS,CAACoD,MAFgB;;AAIhC;AACAhC,EAAAA,OAAO,EAAEpB,SAAS,CAACqD,IALa;;AAOhC;AACAhC,EAAAA,IAAI,EAAErB,SAAS,CAACgD,MARgB;;AAUhC;AACAlC,EAAAA,MAAM,EAAEd,SAAS,CAACsD,OAAV,CAAkBtD,SAAS,CAACgD,MAA5B,CAXwB;;AAahC;AACA7B,EAAAA,WAAW,EAAEnB,SAAS,CAACsD,OAAV,CAAkBxD,SAAS,CAAC+C,KAAV,CAAgBC,kBAAlC,CAdmB;;AAgBhC;AACA9B,EAAAA,eAAe,EAAElB,SAAS,CAAC+C,KAAV,CAAgBC,kBAjBD;;AAmBhC;AACA7B,EAAAA,eAAe,EAAEjB,SAAS,CAACqD,IApBK;;AAsBhC;AACF;AACA;AACA;AACA;AACEnC,EAAAA,OAAO,EAAElB,SAAS,CAACsD,OAAV,CAAkBxD,SAAS,CAAC+C,KAAV,CAAgBU,mBAAlC,CA3BuB;AA6BhC;;AAEA;AACA9B,EAAAA,gBAAgB,EAAEf,eAAe,CAACkC,SAAhB,CAA0BnB,gBAhCZ;;AAkChC;AACAD,EAAAA,aAAa,EAAEd,eAAe,CAACkC,SAAhB,CAA0BpB,aAnCT;;AAqChC;AACAE,EAAAA,SAAS,EAAEhB,eAAe,CAACkC,SAAhB,CAA0BlB,SAtCL;;AAwChC;AACAC,EAAAA,WAAW,EAAEjB,eAAe,CAACkC,SAAhB,CAA0BjB,WAzCP;;AA2ChC;AACAL,EAAAA,KAAK,EAAEZ,eAAe,CAACkC,SAAhB,CAA0BtB,KA5CD;;AA8ChC;AACAC,EAAAA,cAAc,EAAEb,eAAe,CAACkC,SAAhB,CAA0BrB,cA/CV;AAiDhC;;AAEA;AACAQ,EAAAA,OAAO,EAAEtB,aAAa,CAACmC,SAAd,CAAwBb,OApDD;;AAsDhC;AACAD,EAAAA,aAAa,EAAErB,aAAa,CAACmC,SAAd,CAAwBd,aAvDP;;AAyDhC;AACAF,EAAAA,SAAS,EAAEnB,aAAa,CAACmC,SAAd,CAAwBhB,SA1DH;;AA4DhC;AACAC,EAAAA,QAAQ,EAAEpB,aAAa,CAACmC,SAAd,CAAwBf;AA7DF,CAAlC;AAgEAjB,qBAAqB,CAAC4C,YAAtB,GAAqC;AACnCzC,EAAAA,IAAI,EAAE,4BAD6B;AAEnCK,EAAAA,OAAO,EAAE,IAF0B;AAGnCC,EAAAA,IAAI,EAAE,EAH6B;AAInCP,EAAAA,MAAM,EAAE,IAJ2B;AAKnCK,EAAAA,WAAW,EAAE,IALsB;AAMnCH,EAAAA,eAAe,EAAE,IANkB;AAOnCC,EAAAA,eAAe,EAAE,KAPkB;AAQnCC,EAAAA,OAAO,EAAE,CACP;AACEuC,IAAAA,OAAO,EAAE,CADX;AAEEC,IAAAA,MAAM,EAAEtD,WAAW,CAACuD;AAFtB,GADO,EAKP;AACEF,IAAAA,OAAO,EAAE,EADX;AAEEC,IAAAA,MAAM,EAAEtD,WAAW,CAACwD;AAFtB,GALO,CAR0B;AAmBnC;AACAtC,EAAAA,KAAK,EAAEZ,eAAe,CAAC8C,YAAhB,CAA6BlC,KApBD;AAqBnCC,EAAAA,cAAc,EAAEb,eAAe,CAAC8C,YAAhB,CAA6BjC,cArBV;AAsBnCE,EAAAA,gBAAgB,EAAEf,eAAe,CAAC8C,YAAhB,CAA6B/B,gBAtBZ;AAuBnCD,EAAAA,aAAa,EAAEd,eAAe,CAAC8C,YAAhB,CAA6BhC,aAvBT;AAwBnCE,EAAAA,SAAS,EAAEhB,eAAe,CAAC8C,YAAhB,CAA6B9B,SAxBL;AAyBnCC,EAAAA,WAAW,EAAEjB,eAAe,CAAC8C,YAAhB,CAA6B7B,WAzBP;AA2BnC;AACAI,EAAAA,OAAO,EAAEtB,aAAa,CAAC+C,YAAd,CAA2BzB,OA5BD;AA6BnC;AACAD,EAAAA,aAAa,EAAErB,aAAa,CAAC+C,YAAd,CAA2B1B,aA9BP;AA+BnCF,EAAAA,SAAS,EAAEnB,aAAa,CAAC+C,YAAd,CAA2B5B,SA/BH;AAgCnCC,EAAAA,QAAQ,EAAEpB,aAAa,CAAC+C,YAAd,CAA2B3B;AAhCF,CAArC;AAmCA,eAAejB,qBAAf;AAEA,SACEN,aADF,EAEEF,WAFF,EAGED,cAHF,EAIEE,aAJF,EAKEI,aALF,EAMEE,KANF,EAOED,eAPF,EAQEH,YARF,EASEC,cATF","sourcesContent":["import coreUtils from \"@opentripplanner/core-utils\";\r\nimport ZoomBasedMarkers from \"@opentripplanner/zoom-based-markers\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { FeatureGroup } from \"react-leaflet\";\r\n\r\nimport * as ModeRectangles from \"./components/markers/ModeRectangles\";\r\nimport * as ModeCircles from \"./components/markers/ModeCircles\";\r\nimport * as RotatedMarker from \"./components/markers/RotatedMarker\";\r\nimport * as CustomTooltip from \"./components/popups/CustomTooltip\";\r\nimport * as VehiclePopup from \"./components/popups/VehiclePopup\";\r\nimport * as VehicleTooltip from \"./components/popups/VehicleTooltip\";\r\nimport RouteGeometry from \"./components/RouteGeometry\";\r\nimport VehicleGeometry from \"./components/VehicleGeometry\";\r\nimport * as utils from \"./utils\";\r\n\r\n/**\r\n * presentational component for rendering transit vehicle positions atop a map\r\n * will show both point positions for a collection of vehicles, as well as being\r\n * able to render a 'selected' vehicle (and it's route pattern trace)\r\n */\r\nfunction TransitVehicleOverlay(props) {\r\n  const {\r\n    center,\r\n    name,\r\n    selectedVehicle,\r\n    showOnlyTracked,\r\n    symbols,\r\n    vehicleList,\r\n    visible,\r\n    zoom,\r\n\r\n    // VehicleGeometry\r\n    color,\r\n    highlightColor,\r\n    onRecenterMap,\r\n    onVehicleClicked,\r\n    PopupSlot,\r\n    TooltipSlot,\r\n\r\n    // RouteGeometry\r\n    highlight,\r\n    lowlight,\r\n    lowlightColor, // note: highlightColor above\r\n    pattern\r\n  } = props;\r\n  utils.linterIgnoreTheseProps(name, visible, center);\r\n\r\n  // Check if possibleColor is a string in format `#000` or `#000000`\r\n  const isValidColor = possibleColor => {\r\n    if (typeof possibleColor !== \"string\") {\r\n      return false;\r\n    }\r\n\r\n    return /^#[A-Fa-f0-9]{3}(?:[A-Fa-f0-9]{3})?$/.test(possibleColor);\r\n  };\r\n\r\n  /**\r\n   * This helper method will be passed to the ZoomBasedMarkers symbolTranform prop.\r\n   * It wraps symbols originally defined in the symbols prop\r\n   * with the VehicleGeometry component that handles the leaflet plumbing,\r\n   * and forwards to VehicleGeometry the relevant props from TransitVehicleOverlay.\r\n   */\r\n  const makeVehicleGeometryWrapper = Symbol => {\r\n    const VehicleGeometryWrapper = ({ entity: vehicle, zoom: renderZoom }) => {\r\n      return (\r\n        <VehicleGeometry\r\n          color={isValidColor(vehicle.routeColor) ? vehicle.routeColor : color}\r\n          highlightColor={\r\n            isValidColor(vehicle.highlightColor)\r\n              ? vehicle.highlightColor\r\n              : highlightColor\r\n          }\r\n          isTracked={\r\n            selectedVehicle && selectedVehicle.tripId === vehicle.tripId\r\n          }\r\n          MarkerSlot={Symbol}\r\n          onRecenterMap={onRecenterMap}\r\n          onVehicleClicked={onVehicleClicked}\r\n          PopupSlot={PopupSlot}\r\n          TooltipSlot={TooltipSlot}\r\n          vehicle={vehicle}\r\n          zoom={renderZoom}\r\n        />\r\n      );\r\n    };\r\n\r\n    VehicleGeometryWrapper.propTypes = {\r\n      entity: coreUtils.types.transitVehicleType.isRequired,\r\n      zoom: PropTypes.number.isRequired\r\n    };\r\n\r\n    return VehicleGeometryWrapper;\r\n  };\r\n\r\n  // when a vehicle is selected, pre-determine whether to show pattern and which vehicles\r\n  let vl = vehicleList;\r\n  let showPattern = false;\r\n  if (\r\n    selectedVehicle &&\r\n    utils.findVehicleById(vehicleList, selectedVehicle.tripId)\r\n  ) {\r\n    if (showOnlyTracked) vl = [selectedVehicle];\r\n    if (pattern) showPattern = true;\r\n  }\r\n\r\n  return (\r\n    <FeatureGroup>\r\n      {vl && symbols && (\r\n        <ZoomBasedMarkers\r\n          entities={vl}\r\n          symbols={symbols}\r\n          symbolTransform={makeVehicleGeometryWrapper}\r\n          zoom={zoom}\r\n        />\r\n      )}\r\n\r\n      {showPattern && (\r\n        <RouteGeometry\r\n          highlight={highlight}\r\n          highlightColor={highlightColor}\r\n          lowlight={lowlight}\r\n          lowlightColor={lowlightColor}\r\n          pattern={pattern}\r\n          selectedVehicle={selectedVehicle}\r\n          zoom={zoom}\r\n        />\r\n      )}\r\n    </FeatureGroup>\r\n  );\r\n}\r\n\r\nTransitVehicleOverlay.propTypes = {\r\n  /** providing a name will allow this layer to be registered in the base-map layer switcher */\r\n  name: PropTypes.string,\r\n\r\n  /** initial visibility value to determine if the layer is 'on' or off in layer switcher */\r\n  visible: PropTypes.bool,\r\n\r\n  /** map zoom: used both to trigger re-renders and to style markers that rely on zoom */\r\n  zoom: PropTypes.number,\r\n\r\n  /** map center: used both to trigger re-renders */\r\n  center: PropTypes.arrayOf(PropTypes.number),\r\n\r\n  /** array of vehicle records - @see: core-utils/types/coreUtils.types.transitVehicleType */\r\n  vehicleList: PropTypes.arrayOf(coreUtils.types.transitVehicleType),\r\n\r\n  /** optional vehicle record for the tracked vehicle (same rec must be in vehicleList) */\r\n  selectedVehicle: coreUtils.types.transitVehicleType,\r\n\r\n  /** showOnlyTracked will hide all other vehicles, except the tracked vehicle */\r\n  showOnlyTracked: PropTypes.bool,\r\n\r\n  /**\r\n   * A list of symbol definitions for the vehicles to be rendered,\r\n   * where symbols are custom leaflet marker components with the signature\r\n   * ({vehicle: object, onVehicleClicked: vehicle => {}, children: Element}) => Element.\r\n   */\r\n  symbols: PropTypes.arrayOf(coreUtils.types.zoomBasedSymbolType),\r\n\r\n  // ////// VehicleGeometry types ////////\r\n\r\n  /** callback to return vehicle record when a marker is clicked */\r\n  onVehicleClicked: VehicleGeometry.propTypes.onVehicleClicked,\r\n\r\n  /** map recenter option (e.g., panTo() or flyTo(), etc...) when tracked vehicle moves */\r\n  onRecenterMap: VehicleGeometry.propTypes.onRecenterMap,\r\n\r\n  /** customizable marker popup (see src/components/popups) */\r\n  PopupSlot: VehicleGeometry.propTypes.PopupSlot,\r\n\r\n  /** customizable marker tooltips (see src/components/popups) */\r\n  TooltipSlot: VehicleGeometry.propTypes.TooltipSlot,\r\n\r\n  /** fill color (#AABBCC format) for all (non-tracked) map vehicle markers */\r\n  color: VehicleGeometry.propTypes.color,\r\n\r\n  /** fill color of tracked vehicle; *to be travelled* portion of tracked route geom */\r\n  highlightColor: VehicleGeometry.propTypes.highlightColor,\r\n\r\n  // ////// RouteGeometry types ////////\r\n\r\n  /** line geometry, ala { id: <tripId>, data: [[lat, lon], [45.50,-122.41], etc..] } */\r\n  pattern: RouteGeometry.propTypes.pattern,\r\n\r\n  /** color of the *already travelled* tracked vehicle route (see highlightColor) */\r\n  lowlightColor: RouteGeometry.propTypes.lowlightColor,\r\n\r\n  /** line styling options for the to be traveled part of the line geom */\r\n  highlight: RouteGeometry.propTypes.highlight,\r\n\r\n  /** line styling options for the already traveled portion of the line geom */\r\n  lowlight: RouteGeometry.propTypes.lowlight\r\n};\r\n\r\nTransitVehicleOverlay.defaultProps = {\r\n  name: \"Real-time Buses and Trains\",\r\n  visible: true,\r\n  zoom: 13,\r\n  center: null,\r\n  vehicleList: null,\r\n  selectedVehicle: null,\r\n  showOnlyTracked: false,\r\n  symbols: [\r\n    {\r\n      minZoom: 0,\r\n      symbol: ModeCircles.Circle\r\n    },\r\n    {\r\n      minZoom: 14,\r\n      symbol: ModeCircles.CircledVehicle\r\n    }\r\n  ],\r\n\r\n  // VehicleGeometry defaults\r\n  color: VehicleGeometry.defaultProps.color,\r\n  highlightColor: VehicleGeometry.defaultProps.highlightColor,\r\n  onVehicleClicked: VehicleGeometry.defaultProps.onVehicleClicked,\r\n  onRecenterMap: VehicleGeometry.defaultProps.onRecenterMap,\r\n  PopupSlot: VehicleGeometry.defaultProps.PopupSlot,\r\n  TooltipSlot: VehicleGeometry.defaultProps.TooltipSlot,\r\n\r\n  // RouteGeometry defaults\r\n  pattern: RouteGeometry.defaultProps.pattern,\r\n  // highlightColor - VehicleGeometry see above\r\n  lowlightColor: RouteGeometry.defaultProps.lowlightColor,\r\n  highlight: RouteGeometry.defaultProps.highlight,\r\n  lowlight: RouteGeometry.defaultProps.lowlight\r\n};\r\n\r\nexport default TransitVehicleOverlay;\r\n\r\nexport {\r\n  CustomTooltip,\r\n  ModeCircles,\r\n  ModeRectangles,\r\n  RotatedMarker,\r\n  RouteGeometry,\r\n  utils,\r\n  VehicleGeometry,\r\n  VehiclePopup,\r\n  VehicleTooltip\r\n};\r\n"],"file":"index.js"}