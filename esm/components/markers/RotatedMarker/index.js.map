{"version":3,"sources":["../../../../src/components/markers/RotatedMarker/index.js"],"names":["React","Marker","LeafletMarker","LeafletProvider","MapLayer","withLeaflet","RotatedMarker","props","el","position","getOptions","contextValue","leaflet","keyboard","popupContainer","fromProps","toProps","leafletElement","setLatLng","icon","setIcon","zIndexOffset","setZIndexOffset","opacity","setOpacity","draggable","dragging","enable","disable","rotationAngle","setRotationAngle","rotationOrigin","setRotationOrigin","children","defaultProps"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAM,IAAIC,aAAnB,QAAwC,SAAxC;AACA,SAASC,eAAT,EAA0BC,QAA1B,EAAoCC,WAApC,QAAuD,eAAvD;AACA,OAAO,uBAAP;AAEA;AACA;AACA;AACA;;IACMC,a;;;;;;;;;;;;;WACJ,8BAAqBC,KAArB,EAA4B;AAC1B,UAAMC,EAAE,GAAG,IAAIN,aAAJ,CAAkBK,KAAK,CAACE,QAAxB,EAAkC,KAAKC,UAAL,CAAgBH,KAAhB,CAAlC,CAAX;AACA,WAAKI,YAAL,mCACKJ,KAAK,CAACK,OADX;AAEEC,QAAAA,QAAQ,EAAEN,KAAK,CAACM,QAFlB;AAGEC,QAAAA,cAAc,EAAEN;AAHlB;AAKA,aAAOA,EAAP;AACD;;;WAED,8BAAqBO,SAArB,EAAgCC,OAAhC,EAAyC;AACvC,UAAIA,OAAO,CAACP,QAAR,KAAqBM,SAAS,CAACN,QAAnC,EAA6C;AAC3C,aAAKQ,cAAL,CAAoBC,SAApB,CAA8BF,OAAO,CAACP,QAAtC;AACD;;AACD,UAAIO,OAAO,CAACG,IAAR,KAAiBJ,SAAS,CAACI,IAA/B,EAAqC;AACnC,aAAKF,cAAL,CAAoBG,OAApB,CAA4BJ,OAAO,CAACG,IAApC;AACD;;AACD,UAAIH,OAAO,CAACK,YAAR,KAAyBN,SAAS,CAACM,YAAvC,EAAqD;AACnD,aAAKJ,cAAL,CAAoBK,eAApB,CAAoCN,OAAO,CAACK,YAA5C;AACD;;AACD,UAAIL,OAAO,CAACO,OAAR,KAAoBR,SAAS,CAACQ,OAAlC,EAA2C;AACzC,aAAKN,cAAL,CAAoBO,UAApB,CAA+BR,OAAO,CAACO,OAAvC;AACD;;AACD,UAAIP,OAAO,CAACS,SAAR,KAAsBV,SAAS,CAACU,SAApC,EAA+C;AAC7C,YAAIT,OAAO,CAACS,SAAR,KAAsB,IAA1B,EAAgC;AAC9B,eAAKR,cAAL,CAAoBS,QAApB,CAA6BC,MAA7B;AACD,SAFD,MAEO;AACL,eAAKV,cAAL,CAAoBS,QAApB,CAA6BE,OAA7B;AACD;AACF;;AACD,UAAIZ,OAAO,CAACa,aAAR,KAA0Bd,SAAS,CAACc,aAAxC,EAAuD;AACrD,aAAKZ,cAAL,CAAoBa,gBAApB,CAAqCd,OAAO,CAACa,aAA7C;AACD;;AACD,UAAIb,OAAO,CAACe,cAAR,KAA2BhB,SAAS,CAACgB,cAAzC,EAAyD;AACvD,aAAKd,cAAL,CAAoBe,iBAApB,CAAsChB,OAAO,CAACe,cAA9C;AACD;AACF;;;WAED,kBAAS;AACP,UAAQE,QAAR,GAAqB,KAAK1B,KAA1B,CAAQ0B,QAAR;AACA,aAAOA,QAAQ,IAAI,IAAZ,IAAoB,KAAKtB,YAAL,IAAqB,IAAzC,GAAgD,IAAhD,gBACL,oBAAC,eAAD;AAAiB,QAAA,KAAK,EAAE,KAAKA;AAA7B,SAA4CsB,QAA5C,CADF;AAGD;;;;EA5CyB7B,Q;;AA+C5BE,aAAa,CAAC4B,YAAd,GAA6B;AAC3BrB,EAAAA,QAAQ,EAAE,KADiB;AAE3BkB,EAAAA,cAAc,EAAE;AAFW,CAA7B;AAKA,eAAe1B,WAAW,CAACC,aAAD,CAA1B","sourcesContent":["import React from \"react\";\r\nimport { Marker as LeafletMarker } from \"leaflet\";\r\nimport { LeafletProvider, MapLayer, withLeaflet } from \"react-leaflet\";\r\nimport \"leaflet-rotatedmarker\";\r\n\r\n/**\r\n * @see https://github.com/verdie-g/react-leaflet-rotatedmarker/issues/1\r\n * TODO: maybe move to either base-map and/or utils and/or own npm & repo\r\n */\r\nclass RotatedMarker extends MapLayer {\r\n  createLeafletElement(props) {\r\n    const el = new LeafletMarker(props.position, this.getOptions(props));\r\n    this.contextValue = {\r\n      ...props.leaflet,\r\n      keyboard: props.keyboard,\r\n      popupContainer: el\r\n    };\r\n    return el;\r\n  }\r\n\r\n  updateLeafletElement(fromProps, toProps) {\r\n    if (toProps.position !== fromProps.position) {\r\n      this.leafletElement.setLatLng(toProps.position);\r\n    }\r\n    if (toProps.icon !== fromProps.icon) {\r\n      this.leafletElement.setIcon(toProps.icon);\r\n    }\r\n    if (toProps.zIndexOffset !== fromProps.zIndexOffset) {\r\n      this.leafletElement.setZIndexOffset(toProps.zIndexOffset);\r\n    }\r\n    if (toProps.opacity !== fromProps.opacity) {\r\n      this.leafletElement.setOpacity(toProps.opacity);\r\n    }\r\n    if (toProps.draggable !== fromProps.draggable) {\r\n      if (toProps.draggable === true) {\r\n        this.leafletElement.dragging.enable();\r\n      } else {\r\n        this.leafletElement.dragging.disable();\r\n      }\r\n    }\r\n    if (toProps.rotationAngle !== fromProps.rotationAngle) {\r\n      this.leafletElement.setRotationAngle(toProps.rotationAngle);\r\n    }\r\n    if (toProps.rotationOrigin !== fromProps.rotationOrigin) {\r\n      this.leafletElement.setRotationOrigin(toProps.rotationOrigin);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    return children == null || this.contextValue == null ? null : (\r\n      <LeafletProvider value={this.contextValue}>{children}</LeafletProvider>\r\n    );\r\n  }\r\n}\r\n\r\nRotatedMarker.defaultProps = {\r\n  keyboard: false,\r\n  rotationOrigin: \"center\"\r\n};\r\n\r\nexport default withLeaflet(RotatedMarker);\r\n"],"file":"index.js"}