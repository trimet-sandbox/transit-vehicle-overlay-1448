{"version":3,"sources":["../../../src/components/popups/vehicle-tracker.js"],"names":["coreUtils","React","FormattedMessage","PropTypes","defaultMessages","S","VehicleTracker","vehicle","isTracked","setTracked","text","cls","handleClick","propTypes","types","transitVehicleType","bool","func","isRequired","defaultProps","Styled"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,eAAT,QAAgC,aAAhC;AAEA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;AAEA;AACA;AACA;;AACA,eAAe,SAASC,cAAT,OAA4D;AAAA,MAAlCC,OAAkC,QAAlCA,OAAkC;AAAA,MAAzBC,SAAyB,QAAzBA,SAAyB;AAAA,MAAdC,UAAc,QAAdA,UAAc;AACzE,MAAMC,IAAI,GAAGF,SAAS,gBACpB,oBAAC,gBAAD;AACE,IAAA,cAAc,EAAEJ,eAAe,CAAC,uCAAD,CADjC;AAEE,IAAA,WAAW,EAAC,oCAFd;AAGE,IAAA,EAAE,EAAC;AAHL,IADoB,gBAOpB,oBAAC,gBAAD;AACE,IAAA,cAAc,EAAEA,eAAe,CAAC,wCAAD,CADjC;AAEE,IAAA,WAAW,EAAC,qCAFd;AAGE,IAAA,EAAE,EAAC;AAHL,IAPF;AAaA,MAAMO,GAAG,GAAGH,SAAS,GAAG,QAAH,GAAc,EAAnC;;AAEA,MAAMI,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBH,IAAAA,UAAU,CAACF,OAAD,EAAUC,SAAV,CAAV;AACD,GAFD;;AAIA,sBACE,oBAAC,CAAD,CAAG,UAAH,CAAc,MAAd;AAAqB,IAAA,OAAO,EAAEI,WAA9B;AAA2C,IAAA,SAAS,EAAED;AAAtD,KACGD,IADH,CADF;AAKD;AAEDJ,cAAc,CAACO,SAAf,GAA2B;AACzB;AACAN,EAAAA,OAAO,EAAEP,SAAS,CAACc,KAAV,CAAgBC,kBAFA;;AAIzB;AACAP,EAAAA,SAAS,EAAEL,SAAS,CAACa,IALI;;AAOzB;AACAP,EAAAA,UAAU,EAAEN,SAAS,CAACc,IAAV,CAAeC;AARF,CAA3B;AAWAZ,cAAc,CAACa,YAAf,GAA8B;AAC5BZ,EAAAA,OAAO,EAAE,IADmB;AAE5BC,EAAAA,SAAS,EAAE;AAFiB,CAA9B,C,CAKA;;AACA,SAASH,CAAC,IAAIe,MAAd","sourcesContent":["import coreUtils from \"@opentripplanner/core-utils\";\r\nimport React from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { defaultMessages } from \"../../utils\";\r\n\r\nimport * as S from \"./styled\";\r\n\r\n/**\r\n * presentational component for tracking button on marker popup\r\n */\r\nexport default function VehicleTracker({ vehicle, isTracked, setTracked }) {\r\n  const text = isTracked ? (\r\n    <FormattedMessage\r\n      defaultMessage={defaultMessages[\"otpUi.TransitVehicleOverlay.trackStop\"]}\r\n      description=\"Prompt to stop tracking a vehicle.\"\r\n      id=\"otpUi.TransitVehicleOverlay.trackStop\"\r\n    />\r\n  ) : (\r\n    <FormattedMessage\r\n      defaultMessage={defaultMessages[\"otpUi.TransitVehicleOverlay.trackStart\"]}\r\n      description=\"Prompt to start tracking a vehicle.\"\r\n      id=\"otpUi.TransitVehicleOverlay.trackStart\"\r\n    />\r\n  );\r\n  const cls = isTracked ? \"active\" : \"\";\r\n\r\n  const handleClick = () => {\r\n    setTracked(vehicle, isTracked);\r\n  };\r\n\r\n  return (\r\n    <S.PopupStyle.Button onClick={handleClick} className={cls}>\r\n      {text}\r\n    </S.PopupStyle.Button>\r\n  );\r\n}\r\n\r\nVehicleTracker.propTypes = {\r\n  /** vehicle record - @see: core-utils/types/transitVehicleType */\r\n  vehicle: coreUtils.types.transitVehicleType,\r\n\r\n  /** tracking state for this vehicle (marker) .. determines button content */\r\n  isTracked: PropTypes.bool,\r\n\r\n  /** callback for when the button is triggered ... cb(vehicle, isTracked); */\r\n  setTracked: PropTypes.func.isRequired\r\n};\r\n\r\nVehicleTracker.defaultProps = {\r\n  vehicle: null,\r\n  isTracked: false\r\n};\r\n\r\n// Rename styled components for export\r\nexport { S as Styled };\r\n"],"file":"vehicle-tracker.js"}