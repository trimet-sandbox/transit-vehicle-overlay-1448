{"version":3,"sources":["../../../../src/components/popups/VehicleTooltip/index.js"],"names":["coreUtils","React","PropTypes","FormattedMessage","Tooltip","L","TooltipStyle","defaultMessages","linterIgnoreTheseProps","FormattedDurationWithSeconds","VehicleTooltip","props","vehicle","isTracked","direction","permanent","offset","routeShortName","routeType","seconds","name","length","route","routeLabel","duration","propTypes","types","transitVehicleType","bool","string","object","defaultProps","Point"],"mappings":"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","sourcesContent":["import coreUtils from \"@opentripplanner/core-utils\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Tooltip } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\n\r\nimport { TooltipStyle } from \"../styled\";\r\nimport { defaultMessages, linterIgnoreTheseProps } from \"../../../utils\";\r\nimport FormattedDurationWithSeconds from \"../../../utils/formatted-duration-with-seconds\";\r\n\r\n/** will show a (leaflet) map tooltip on a vehicle, showing route and update recency */\r\nexport default function VehicleTooltip(props) {\r\n  const { vehicle, isTracked, direction, permanent, offset } = props;\r\n  linterIgnoreTheseProps(isTracked);\r\n\r\n  const { routeShortName, routeType, seconds } = vehicle;\r\n\r\n  let name = routeShortName;\r\n  // This condition avoids processing long route names such as \"Portland Streetcar\".\r\n  if (routeShortName?.length <= 5) {\r\n    name = routeType ? (\r\n      // This produces text such as \"MAX Green\", so don't localize.\r\n      `${routeType} ${routeShortName}`\r\n    ) : (\r\n      <FormattedMessage\r\n        defaultMessage={\r\n          defaultMessages[\"otpUi.TransitVehicleOverlay.genericRouteFormat\"]\r\n        }\r\n        description=\"Formats a route label\"\r\n        id=\"otpUi.TransitVehicleOverlay.genericRouteFormat\"\r\n        values={{\r\n          route: routeShortName\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Tooltip permanent={permanent} direction={direction} offset={offset}>\r\n      <TooltipStyle>\r\n        <TooltipStyle.Title>\r\n          <FormattedMessage\r\n            defaultMessage={\r\n              defaultMessages[\"otpUi.TransitVehicleOverlay.tooltipRouteLabel\"]\r\n            }\r\n            description=\"Displays a route label in a tooltip\"\r\n            id=\"otpUi.TransitVehicleOverlay.tooltipRouteLabel\"\r\n            values={{\r\n              routeLabel: name\r\n            }}\r\n          />\r\n        </TooltipStyle.Title>\r\n        <FormattedMessage\r\n          defaultMessage={\r\n            defaultMessages[\"otpUi.TransitVehicleOverlay.durationAgo\"]\r\n          }\r\n          description=\"Text describing a past duration\"\r\n          id=\"otpUi.TransitVehicleOverlay.durationAgo\"\r\n          values={{\r\n            duration: <FormattedDurationWithSeconds seconds={seconds} />\r\n          }}\r\n        />\r\n      </TooltipStyle>\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nVehicleTooltip.propTypes = {\r\n  /** vehicle record - @see: core-utils/types/transitVehicleType */\r\n  vehicle: coreUtils.types.transitVehicleType,\r\n\r\n  /** indicate if this vehicle is being tracked, */\r\n  isTracked: PropTypes.bool,\r\n\r\n  /** is the tip always shown, or just shown on mouse hover */\r\n  permanent: PropTypes.bool,\r\n\r\n  /** tip placement (side(s), top, bottom) */\r\n  direction: PropTypes.string,\r\n\r\n  /** center of the marker, or some X,Y position in relation to the marker's center */\r\n  offset: PropTypes.object // eslint-disable-line react/forbid-prop-types\r\n};\r\n\r\nVehicleTooltip.defaultProps = {\r\n  vehicle: null,\r\n  isTracked: false,\r\n  permanent: false,\r\n  direction: \"auto\",\r\n  offset: new L.Point(0, 0)\r\n};\r\n"],"file":"index.js"}