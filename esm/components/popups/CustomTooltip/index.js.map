{"version":3,"sources":["../../../../src/components/popups/CustomTooltip/index.js"],"names":["coreUtils","React","PropTypes","useIntl","Tooltip","L","TooltipStyle","linterIgnoreTheseProps","CustomTooltip","props","vehicle","isTracked","allMarkers","getContent","offset","permanent","direction","intl","tooltipContent","dir","heading","propTypes","types","transitVehicleType","func","bool","string","object","defaultProps","Point"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,OAAOC,CAAP,MAAc,SAAd;AAEA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,sBAAT,QAAuC,gBAAvC;AAEA;;AACA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC3C,MACEC,OADF,GAQID,KARJ,CACEC,OADF;AAAA,MAEEC,SAFF,GAQIF,KARJ,CAEEE,SAFF;AAAA,MAGEC,UAHF,GAQIH,KARJ,CAGEG,UAHF;AAAA,MAIEC,UAJF,GAQIJ,KARJ,CAIEI,UAJF;AAAA,MAKEC,MALF,GAQIL,KARJ,CAKEK,MALF;AAAA,MAMEC,SANF,GAQIN,KARJ,CAMEM,SANF;AAAA,MAOEC,SAPF,GAQIP,KARJ,CAOEO,SAPF;AASA,MAAMC,IAAI,GAAGd,OAAO,EAApB,CAV2C,CAY3C;;AACA,MAAIe,cAAc,GAAG,IAArB;;AACA,MAAIP,SAAS,IAAIC,UAAjB,EAA6B;AAC3BM,IAAAA,cAAc,GAAGL,UAAU,CAACH,OAAD,EAAUC,SAAV,EAAqBM,IAArB,CAA3B;AACD,GAhB0C,CAkB3C;;;AACA,MAAIE,GAAG,GAAGH,SAAV;;AACA,MAAIA,SAAS,KAAK,UAAlB,EAA8B;AAC5BG,IAAAA,GAAG,GAAG,KAAN;AACA,QAAIT,OAAO,KAAKA,OAAO,CAACU,OAAR,GAAkB,EAAlB,IAAwBV,OAAO,CAACU,OAAR,GAAkB,GAA/C,CAAX,EACED,GAAG,GAAG,QAAN;AACH;;AAED,SACED,cAAc,KACbP,SAAS,IAAIC,UADA,CAAd,iBAEE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEG,SAApB;AAA+B,IAAA,SAAS,EAAEI,GAA1C;AAA+C,IAAA,MAAM,EAAEL;AAAvD,kBACE,oBAAC,YAAD,QAAeI,cAAf,CADF,CAHJ;AAQD;AAEDV,aAAa,CAACa,SAAd,GAA0B;AACxB;AACAX,EAAAA,OAAO,EAAEV,SAAS,CAACsB,KAAV,CAAgBC,kBAFD;;AAIxB;AACAV,EAAAA,UAAU,EAAEX,SAAS,CAACsB,IALE;;AAOxB;AACAb,EAAAA,SAAS,EAAET,SAAS,CAACuB,IARG;;AAUxB;AACAb,EAAAA,UAAU,EAAEV,SAAS,CAACuB,IAXE;;AAaxB;AACAV,EAAAA,SAAS,EAAEb,SAAS,CAACuB,IAdG;;AAgBxB;AACAT,EAAAA,SAAS,EAAEd,SAAS,CAACwB,MAjBG;;AAmBxB;AACAZ,EAAAA,MAAM,EAAEZ,SAAS,CAACyB,MApBM,CAoBC;;AApBD,CAA1B;AAuBAnB,aAAa,CAACoB,YAAd,GAA6B;AAC3BlB,EAAAA,OAAO,EAAE,IADkB;AAE3BC,EAAAA,SAAS,EAAE,KAFgB;AAG3BC,EAAAA,UAAU,EAAE,KAHe;AAI3BC,EAAAA,UAAU,EAAE,oBAACH,OAAD,EAAUC,SAAV,EAAwB;AAClCJ,IAAAA,sBAAsB,CAACG,OAAD,EAAUC,SAAV,CAAtB;AACA,WAAO,IAAP;AACD,GAP0B;AAQ3BI,EAAAA,SAAS,EAAE,IARgB;AAS3BC,EAAAA,SAAS,EAAE,UATgB;AAU3BF,EAAAA,MAAM,EAAE,IAAIT,CAAC,CAACwB,KAAN,CAAY,CAAZ,EAAe,CAAf;AAVmB,CAA7B","sourcesContent":["import coreUtils from \"@opentripplanner/core-utils\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { Tooltip } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\n\r\nimport { TooltipStyle } from \"../styled\";\r\nimport { linterIgnoreTheseProps } from \"../../../utils\";\r\n\r\n/** will show a (leaflet) map tooltip on a vehicle, with custom information (e.g. arrival data) */\r\nexport default function CustomTooltip(props) {\r\n  const {\r\n    vehicle,\r\n    isTracked,\r\n    allMarkers,\r\n    getContent,\r\n    offset,\r\n    permanent,\r\n    direction\r\n  } = props;\r\n  const intl = useIntl();\r\n\r\n  // note: only build tooltip content if we're about to render it on a tooltip\r\n  let tooltipContent = null;\r\n  if (isTracked || allMarkers) {\r\n    tooltipContent = getContent(vehicle, isTracked, intl);\r\n  }\r\n\r\n  // the custom \"rotation\" tooltip orientation is either top or bottom\r\n  let dir = direction;\r\n  if (direction === \"rotation\") {\r\n    dir = \"top\";\r\n    if (vehicle && (vehicle.heading < 80 || vehicle.heading > 280))\r\n      dir = \"bottom\";\r\n  }\r\n\r\n  return (\r\n    tooltipContent &&\r\n    (isTracked || allMarkers) && (\r\n      <Tooltip permanent={permanent} direction={dir} offset={offset}>\r\n        <TooltipStyle>{tooltipContent}</TooltipStyle>\r\n      </Tooltip>\r\n    )\r\n  );\r\n}\r\n\r\nCustomTooltip.propTypes = {\r\n  /** vehicle record - @see: core-utils/types/transitVehicleType */\r\n  vehicle: coreUtils.types.transitVehicleType,\r\n\r\n  /** callback used to supply content of the tip (e.g, \"arrives in 5 minutes\") */\r\n  getContent: PropTypes.func,\r\n\r\n  /** indicate if this vehicle is being tracked, */\r\n  isTracked: PropTypes.bool,\r\n\r\n  /** control whether the tip goes on all markers or just the tracked marker */\r\n  allMarkers: PropTypes.bool,\r\n\r\n  /** is the tip always shown, or just shown on mouse hover */\r\n  permanent: PropTypes.bool,\r\n\r\n  /** placement: rotation (top/bot based on marker orientation), auto, left, right, top, bottom */\r\n  direction: PropTypes.string,\r\n\r\n  /** center of the marker, or some X,Y position in relation to the marker's center */\r\n  offset: PropTypes.object // eslint-disable-line react/forbid-prop-types\r\n};\r\n\r\nCustomTooltip.defaultProps = {\r\n  vehicle: null,\r\n  isTracked: false,\r\n  allMarkers: false,\r\n  getContent: (vehicle, isTracked) => {\r\n    linterIgnoreTheseProps(vehicle, isTracked);\r\n    return null;\r\n  },\r\n  permanent: true,\r\n  direction: \"rotation\",\r\n  offset: new L.Point(0, 0)\r\n};\r\n"],"file":"index.js"}